@model FinalElectron.ViewModels.VmCart

@{
    ViewBag.Title = "Index";
}

<!-- Shopping Cart page -->
<div class="col-lg-9 col-sm-8" id="soppingCart">

    <div id="breadcrumb">
        <div class="icon">
            <a href="@Url.Action("Index","Home")">
                <i class="fa fa-home"></i>
            </a>
            <i class="fas fa-chevron-right"></i>
        </div>
        <a href="@Url.Action("Index","Cart")">Shopping Cart</a>
    </div>
    <h2 class="title">Shopping Cart</h2>

    @if (Model.List.Count == 0)
    {
        <p> Your shopping cart is empty!</p>
    }
    else
    {



        <div id="products">
            <table class="table table-bordered">
                <colgroup>
                    <col style="width: 140px;">
                    <col style="width: 184px;">
                    <col style="width: 124px;">
                    <col style="width: 190px;">
                    <col style="width: 113px;">
                </colgroup>
                <thead>
                    <tr>
                        <td>Image</td>
                        <td>Product Name</td>
                        <td>Brand</td>
                        <td>Quantity</td>
                        <td class="price">Unit Price</td>
                        <td class="price">Total</td>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.List)
                    {
                        <tr>
                            <td class="text-center">
                                <a href="@Url.Action("Index", "Detail", new { id = Model.ProductOptions.FirstOrDefault(p => p.Id == item.Key).Id })"><img src="~/Uploads/@Model.ProductOptions.FirstOrDefault(p => p.Id == item.Key).Product.ProductImages.FirstOrDefault().Name" alt="product image"></a>
                            </td>
                            <td>
                                <a href="@Url.Action("Index", "Detail", new { id = Model.ProductOptions.FirstOrDefault(p => p.Id == item.Key).Id })">@Model.ProductOptions.FirstOrDefault(p => p.Id == item.Key).Product.Model.Name @Model.ProductOptions.FirstOrDefault(p => p.Id == item.Key).Product.Name</a>
                                <br />
                                @(Model.ProductOptions.FirstOrDefault(p => p.Id == item.Key).ColorId != 0 ? Model.ProductOptions.FirstOrDefault(p => p.Id == item.Key).Color.Name : "")


                            </td>
                            <td style="text-transform:capitalize">
                                @(Model.ProductOptions.FirstOrDefault(p => p.Id == item.Key).Product.Model.Brand.Name)
                            </td>
                            <td>
                                <div class="miqdar">
                                    <input type="text" class="addCardInput" data-id="@item.Key" data-price="@Model.ProductOptions.FirstOrDefault(p => p.Id == item.Key).Price"  value="@item.Value">
                                    <button class="btn refresh"><i class="fas fa-sync-alt"></i></button>
                                    <button class="btn remove removeCardBtn" data-id="@item.Key"><i class="fa fa-times-circle"></i></button>
                                </div>
                            </td>
                            @if (item.Value >= 10 && item.Value < 20)
                            {
                                <td class="price" data-proId="@item.Key">
                                    $@((Model.ProductOptions.FirstOrDefault(p => p.Id == item.Key).Price * 95 / 100).ToString("#.00"))
                                    <br />
                                    <span style="text-decoration:line-through">$@Model.ProductOptions.FirstOrDefault(p => p.Id == item.Key).Price.ToString("#.00") </span>
                                </td>
                                <td class="price forSumTotal" data-ownTotal="@item.Key">$@(((Model.ProductOptions.FirstOrDefault(p => p.Id == item.Key).Price) * 95/100 * (item.Value)).ToString("#.00"))</td>
                            }
                            else if (item.Value > 0 && item.Value < 10)
                            {
                                <td class="price" data-proId="@item.Key">$@(Model.ProductOptions.FirstOrDefault(p => p.Id == item.Key).Price.ToString("#.00"))
                                <br />
                                    <span style="text-decoration:line-through"></span>

                                </td>
                                <td class="price forSumTotal" data-ownTotal="@item.Key">$@(((Model.ProductOptions.FirstOrDefault(p => p.Id == item.Key).Price) * (item.Value)).ToString("#.00"))</td>
                            }
                            else if (item.Value >= 20 && item.Value < 30)
                            {
                                <td class="price" data-proId="@item.Key">
                                    $@((Model.ProductOptions.FirstOrDefault(p => p.Id == item.Key).Price * 88 / 100).ToString("#.00"))
                                    <br />
                                    <span style="text-decoration:line-through">$@Model.ProductOptions.FirstOrDefault(p => p.Id == item.Key).Price.ToString("#.00") </span>
                                </td>
                                <td class="price forSumTotal" data-ownTotal="@item.Key">$@(((Model.ProductOptions.FirstOrDefault(p => p.Id == item.Key).Price) * 88/100 * (item.Value)).ToString("#.00"))</td>
                            }
                            else if (item.Value >= 30)
                            {
                                <td class="price" data-proId="@item.Key">
                                    $@((Model.ProductOptions.FirstOrDefault(p => p.Id == item.Key).Price * 80 / 100).ToString("#.00"))
                                    <br />
                                    <span style="text-decoration:line-through">$@Model.ProductOptions.FirstOrDefault(p => p.Id == item.Key).Price.ToString("#.00") </span>
                                </td>
                                <td class="price forSumTotal" data-ownTotal="@item.Key">$@(((Model.ProductOptions.FirstOrDefault(p => p.Id == item.Key).Price) * 80/100 * (item.Value)).ToString("#.00"))</td>
                            }
                        </tr>
                    }
                </tbody> 
            </table>
        </div>
        <div id="total">
            <table class="table table-bordered">
                <colgroup>
                    <col style="width: 167px;">
                    <col style="width: 96px;">
                </colgroup>
                <tbody>
                    <tr>
                        <th class="price">Sub-Total:</th>
                        <td class="price allSubTotal">$@((ViewBag.CartCountPrice.Value*82/100).ToString("#.00"))</td>
                    </tr>
                    <tr>
                        <th class="price">VAT (18%):</th>
                        <td class="price allTotalVat">$@((ViewBag.CartCountPrice.Value*18/100).ToString("#.00"))</td>
                    </tr>
                    <tr>
                        <th class="price">Total:</th>
                        <td class="price allTotalPrice">$@ViewBag.CartCountPrice.Value.ToString("#.00")</td>
                    </tr>
                </tbody>
            </table>
        </div>
    }
<div class="buttons">
    <a href="@Url.Action("Index","Home")" class="btn">Continue Shopping </a>
    <a href="@Url.Action("Index","Checkout")" class="btn checkout @(Model.List.Count==0? "d-none":"")">CheckOut</a>

    @*<button class="btn checkout @(Model.List.Count==0? "d-none":"")">Checkout</button>*@
</div>
</div>
<!-- end of shopping cart page css  -->
